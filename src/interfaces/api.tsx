import { NoteFiles } from "../types/notes";

// Generated by https://quicktype.io
export interface NoteAPIResponse {
  notes: NoteResponse[];
}

export interface NoteSaveApiResponse {
  note: NoteResponse
}

export interface NoteResponse {
  _id:        string;
  title:      string;
  body:       string;
  background: string;
  files:      NoteFiles;
  createdAt:  string;
  updatedAt:  string;
  local?:     boolean
  editable?:  boolean
  select:     boolean
  categorie:   string
}

export interface FileResponse {
  _id?:       string;
  file_name: string;
  ref?:       string;
  url:       string;
  state?:     boolean;
  note?:      string;
  user?:      User;
  typeFile?:  TypeFile;
  icon?:      string;
  createdAt?: string;
  updatedAt?: string;
  __v?:       number;
  type?:      string
}

export enum TypeFile {
  Application = "application",
  Image = "image",
  Video = "video",
}

export enum User {
  The63Cfda971B4C646Bf85E9D38 = "63cfda971b4c646bf85e9d38",
}

export interface NoteApiForm {
  title: string
  body: string
  background: string
  categorie: string
}

export interface QueryResponse {
  note?: NoteResponse
  msg?: string
  notes?: NoteResponse[]
  error?: string
}

export interface Params {
  method: string
  url: string
  params?: NoteApiForm | { notes: NoteResponse[] } | { files: string[] }
}

//Auth
export interface AuthResponse {
  token?: string
  error?: string
  msg?: string
}

export interface UserResponse {
  user: UserData;
}

export interface UserData {
  _id:           string;
  name:          string;
  email:         string;
  profile_image: string;
}

export interface UpdatDataUser {
  file?: FormData
  name?: string
}

//Categories
export interface CategoriesResponse {
  categories: Category[];
}

export interface CategorySave {
  categorie: Category;
}

export interface Category {
  _id:       string;
  categorie: string;
  createdAt: string;
  updatedAt: string;
}

